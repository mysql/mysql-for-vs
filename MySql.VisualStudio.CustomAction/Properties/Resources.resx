<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityLogAccessDeniedError" xml:space="preserve">
    <value>Error found in the ActivityLog. Warning message will be displayed for instance: 15.0_{0}.</value>
  </data>
  <data name="AssemblyFoundAt" xml:space="preserve">
    <value>The {0} assembly was found at {1}.</value>
  </data>
  <data name="BindingRedirectEntriesRemoved" xml:space="preserve">
    <value>Removed existing binding redirect entries.</value>
  </data>
  <data name="CallingMethodError" xml:space="preserve">
    <value>Error when calling the method {0} {1}.</value>
  </data>
  <data name="ConnectorNETGeneralError" xml:space="preserve">
    <value>Error found when checking if Connector/NET is installed</value>
  </data>
  <data name="CreatedRegistryKey" xml:space="preserve">
    <value>Created registry key. keyPath = '{0}'. keyName='{1}'.</value>
  </data>
  <data name="CreatingRegistryKey" xml:space="preserve">
    <value>Creating registry key. keyPath = '{0}'. keyName='{1}'.</value>
  </data>
  <data name="DeletedRegistryKey" xml:space="preserve">
    <value>Deleted registry key. keyPath = '{0}'. keyName='{1}'.</value>
  </data>
  <data name="DeletingRegistryKey" xml:space="preserve">
    <value>Deleting registry key. keyPath = '{0}'. keyName='{1}'.</value>
  </data>
  <data name="ExecutingCustomAction" xml:space="preserve">
    <value>Executing '{0}' custom action.</value>
  </data>
  <data name="ExtensionsFileCreated" xml:space="preserve">
    <value>Extensions file created for {0}.</value>
  </data>
  <data name="ExtensionsFileDeleted" xml:space="preserve">
    <value>Deleted extensions file {0}_EXTENSIONSFILE_CREATED.</value>
  </data>
  <data name="FailedToExecuteCustomAction" xml:space="preserve">
    <value>Error executing '{0}'. {1}. {2}.</value>
  </data>
  <data name="FailedToLoadAssembly" xml:space="preserve">
    <value>Failed to load the {0} assembly.</value>
  </data>
  <data name="FailedToParseVSVersion" xml:space="preserve">
    <value>Could not parse parameter 'VSVersion' to a valid 'SupportedVisualStudioVersions' value.</value>
  </data>
  <data name="FailedToReadActivityLog" xml:space="preserve">
    <value>An exception was raised when attempting to read the ActivityLog: {0}.</value>
  </data>
  <data name="FailedToRefreshExtensions" xml:space="preserve">
    <value>WARNING: The \"devenv /updateconfiguration\" command may have failed to execute succesfully preventing Visual Studio 2017 from registering/unregistering MySQL for Visual Studio. If affected, run the command manually using \"Developer Command Prompt for VS\". For additional details, see the product documentation.</value>
  </data>
  <data name="FeatureNotSupported" xml:space="preserve">
    <value>Feature {0} is not supported.</value>
  </data>
  <data name="InstalledMySqlDataVersion" xml:space="preserve">
    <value>Version of Connector/NET and the MySql.Data library is: {0}</value>
  </data>
  <data name="InternalMySqlDataVersion" xml:space="preserve">
    <value>MySql.Data library included in MySQL for Visual Studio is: {0}</value>
  </data>
  <data name="InvokingMethodOnCustomInstaller" xml:space="preserve">
    <value>Invoking method on custom installer.</value>
  </data>
  <data name="MethodNullInformation" xml:space="preserve">
    <value>Method information was null.</value>
  </data>
  <data name="MySqlDataNotFound" xml:space="preserve">
    <value>The MySql.Data library was not found.</value>
  </data>
  <data name="MySqlDataVersionsMatch" xml:space="preserve">
    <value>The MySql.Data library included in the installed version of Connector/NET matches the one included with MySQL for Visual Studio. No further action is needed.</value>
  </data>
  <data name="MySqlDataVersionsMatchNoUpdateRequired" xml:space="preserve">
    <value>Updating the PKGDEF file is not required. Both versions of MySql.Data libraries match.</value>
  </data>
  <data name="MySQLForVisualStudioNotInstalledNoUpdateRequired" xml:space="preserve">
    <value>Updating the PKGDEF file is not required. MySQL for Visual Studio is not installed.</value>
  </data>
  <data name="PkgdefFileUpdated" xml:space="preserve">
    <value>The PKGDEF file has been updated.</value>
  </data>
  <data name="PkgdefFileUpdateFailedForFeature" xml:space="preserve">
    <value>Update of the PKGDEF file failed for feature {0} with error: {1}.</value>
  </data>
  <data name="ProductInstallationPath" xml:space="preserve">
    <value>{0} installation path: {1}.</value>
  </data>
  <data name="ProductNotInstalled" xml:space="preserve">
    <value>{0} is not installed.</value>
  </data>
  <data name="SetSessionVariableValue" xml:space="preserve">
    <value>Set session value. {0}={1}.</value>
  </data>
  <data name="UpdatingPkgdefFileForFeature" xml:space="preserve">
    <value>Attempting to update the PKGDEF file for feature {0}.</value>
  </data>
  <data name="VisualStudioInstallationPathNotFound" xml:space="preserve">
    <value>Could not determine installation path of Visual Studio.</value>
  </data>
  <data name="VisualStudioVersionNotSelected" xml:space="preserve">
    <value>This version of Visual Studio was not selected for installation by the user. Updating the PKGDEF file is not required.</value>
  </data>
  <data name="FailedToParseOldVersionEntry" xml:space="preserve">
    <value>Failed to parse the OldVersion entry {0} for {1}.</value>
  </data>
  <data name="FailedToReadThePkgdefFile" xml:space="preserve">
    <value>Failed to read the PKGDEF file for {0} at: {1}.</value>
  </data>
  <data name="IncorrectReferenceInOldVersionEntry" xml:space="preserve">
    <value>The OldVersion entry was expected to reference the internal version of MySql.Data library ({0}).</value>
  </data>
  <data name="VisualStudioVersionNotSupported" xml:space="preserve">
    <value>This version of Visual Studio is not supported.</value>
  </data>
  <data name="FailedToWriteToPkgdefFile" xml:space="preserve">
    <value>Failed to write to the PKGDEF file. Validate that the application is running with administrator privileges.</value>
  </data>
  <data name="InvalidPkgdefFile" xml:space="preserve">
    <value>An invalid name("{0}") for the PKGDEF file has been provided.</value>
  </data>
  <data name="RegistryKeyDeleteSkipped" xml:space="preserve">
    <value>Skipped deletion of the '{0}' registry key since it was not created during the installation of MySQL for Visual Studio.</value>
  </data>
  <data name="PkgdefFileUpdateNotRequired" xml:space="preserve">
    <value>Updating the PKGDEF file is not required.</value>
  </data>
</root>