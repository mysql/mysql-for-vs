
6.6.7
- Fix for WI #782, Visual Studio package is missing calls to UnlockProviderObject.
- Fix for Debugging routine throws error of data too long for column 'pvarname' at row 1 error (MySql bug #70159,
Oracle bug #17568158).
- Fix for Error when editing/altering stored procedure/trigger (Oracle bug #17830161).
- Fix for Debugger fails to debug routine correctly with two functions in a single expression (Oracle bug #17865915).
- Fix for WI #853, Intellisense only works the first time.
- Fix for Error when invoking intellisense in some corner case scenarios (Oracle bug #17890216).
- Fix for NullReferenceException when try to save entity with TINYINY or BIGINT as PK (MySql bug #70888, Oracle bug #17866076).
- Fix for fields of type TIME(3) don't read milliseconds (MySql bug #70377)
- Fix for Wrong milliseconds serialization (MySql bug #70686).
- Fix for MySql Stored Routine Debugger Fails with Stored Procedure with Leave statement (Oracle bug #17616344).
- Fix for WI #886 MySql script does not show result set if comment "-- " is used at the beginning.
- Fix for WI #855, At Server Explorer Table node is incorrectly removed (temporarily).
- Fix for WI #850, At Server Explorer when Openning a MySQL connection, leaving empty all fields, opens a windows with confusing message.
- Fix for WI #843, Error occurs when displaying blob columns in results set for MySql script.
- Fix for Intellisense shows views from all databases, instead of only the current one (Oracle bug #17954412).
- Fix for WI #841, On MySql script, Intellisense not working if the DB is not selected in the connection parameters
  (additionally, now if a "use <database>" is executed, Intellisense now uses that database).
- Fix for In parser 'describe' keyword must be treated as synonym of 'explain' keyword (Oracle bug #17956087).
- Fix for Case incorrect on table in SQL queries for MySqlSessionStateStore (MySql bug #69652, Oracle bug #17960855).
- Fix for rename column operation in Entity Framework migrations (MySQL Bug #71102, Oracle Bug #17959787). 
- Fix for WI #910 Connect to MySQL window is not retrieving the tables.
- Fix for MySql Debugger does not evaluate last_insert_id function in watch expression correctly 
  (although it uses the right value in user debuggee code). (Oracle bug #18111085).
- Changed debugger's database name to ".serversidedebugger" so it is hidden by default in MySql Workbench.
- Fix for Entity Framework Inserts broken on tables with unsigned bigint as auto increment (MySql Bug #71242).
- Fix for DotNet Connector keepalive in milliseconds instead of seconds (MySql Bug #69484, Oracle Bug #17981275).
- Fix for EF SQL Generator, Union Syntax (Concat operator) is missing required parentheses (may cause semantic changes 
  when combined with Limit clause (Take operator)) (MySql bug #70828, Oracle bug #18049691).
- Fix for support for Entity Framework 4.3 Code first Identifiers for Migrations & EF6 (MySql Bug #67285, Oracle bug #16286397).
- Fix for Parser does not parse "If (" with uneven spaces (Oracle bug #17981407).


6.6.6
- Fix for GetSchema returning MySqlException instead of ArgumentException when passing an invalid collection name
  (Oracle bug #16271425, MySql bug #67901).
- Fix for EF 4.3 failing when FK identifiers are too long (MySql bug #67285, Oracle bug #16286397).
- Fix for race condition on ConnectionStringBuilder when using multiple threads 
  (MySql bug #68217, Oracle bug #16310698).
- Fix for stored routines being edited from Server explorer appear as ALTER, which may led
  to syntax errors, which may led to Intellisense to stop working (Oracle bug #16357595).
- Fix for Error in Server Explorer when refreshing a table or view (Oracle bug #16363908).
- Fix for Intellisense not available for Views (Oracle bug #16384218).
- Fix for "When saving a new stored procedure, it raises a windows error message", due to 
  using definer (Oracle bug #16363828).
- Fix for "The first time a new stored routine is saved, after save, Intellisense doesn't work (Oracle bug #16384238).
- Fix for "Error when saving after changing an existing stored routine name in SQL in the editor" (Oracle bug #16390757).
- Fix for server explorer error opening a remote connection (Oracle bug #16357786).
- Fix for password expiration, new password dialog failed (Oracle bug #16357752).
- Fix for Specifying delete cascade in EF migrations does not work (MySql bug #68457, Oracle bug #16398432).
- Fix for InvalidCastException thrown when executing an stored function (MySql bug #64633, Oracle bug #13864627).
- Fix for Default Command Timeout not applying for EFMySqlCommand (MySql bug #67171, Oracle bug #14825670).
- Fix for Debugger cannot debug stored procedures with a main begin labeled and declare statements included (Oracle bug #16002371).
- Fix for bug If using repair option, then vs2010 doesnt allow to connect to db (Oracle bug #16238242).
- Fix for bug "Can't change the name for a view in view editor" (Oracle bug #13805346).
- Fix for "Cannot change the name for a Foreign Key in table designer" (Oracle bug #16238068).
- Fix for error when trying to set primary key for a column with same name as mysql keyword (like INT) in table designer
  (Oracle bug #16238102).
- Fix for databases not displayed in connect dialog for mysql script when correcting credentials, after entering a bad password
  (Oracle bug #13805337).
- Fix for Debugger fails trying to debug a stored routine in a MySql server hosted in linux without lower_case_table_names option enabled
  (MySql bug #69065, Oracle bug #16770384).
- Fix for Debugger issue, Values through watch tab shouldn't allow to be modified (Oracle bug #14545448).
- Fix for Visual Studio Mysql editor colors cannot be customized (Oracle bug #16453324, MySql bug #67994).
- Fix for Parser fails to recognizes a complex view (Oracle bug #16815427).
- Fix for Altering table's primary key in designer not working (Oracle bug #16866053).
- Fix for Connector/NET cannot read data from a MySql table using UTF-16/UTF-32 (MySql bug #69169, Oracle bug #16776818).
- Fix for Entity Framework when inserts data having Identity columns (Oracle bug #16494585).
- Fix for Malformed query in Entity Framework when eager loading due to multiple projections (MySql bug #67183, Oracle bug #16872852).
- Fix for Migrations in Entity Framework when tries to update database that is already updated (Oracle bug #16869202, MySql bug#68889).
- Fix for bug IIS application pool reset worker process causes website to crash (Oracle bug #16909237, Mysql Bug #67665).
- Fix for intellisense completion, now Views are displayed together with Tables calling intellisense (Oracle Bug #16881451).
- Fix for parser syntax, now the parser supports the clause ALTER TABLE table_name RENAME {INDEX|KEY} old_index_name TO new_index_name introduced in MySql 5.7. (Oracle Bug #16881481)
- Fix for bug Error in LINQ to Entities query when using Distinct().Count() (MySql Bug #68513, Oracle bug #16950146).
- Fix for occasionally return no data when socket connection is slow, interrupted or delayed (MySql bug #69039, Oracle bug #16950212).
- Fix for ConstraintException when filling a datatable (MySql bug #65065, Oracle bug #16952323).
- Fix for Debugging a routine produces an error when binary log is enabled (Oracle bug #16941181).  
- Fix for nested sql generated for LINQ to Entities query with Take and Order by (MySql bug #65723, Oracle bug #16973939).
- Several fixes for the parser:
a) Added a all server supported keywords as identifiers to grammar.
b) Solved some inconsistencies on they way begin (work) vs begin (block) was interpreted regarding server.
c) Added to grammar missing comparison operators for 'handler table read'.
d) Corrected several errors (instead of returning "missing EndOfFile" now returns "No viable alternative at input ...")/
e) Added to grammar missing support for 'show count(*) warnings'.
f) Fixed bug when case expression was accepting 'case end' (must only accept 'end').
g) Added support for '$' in identifiers.
h) Corrected some bugs in escape sequences (like not recognizing \b).
i) Fixed a bug where not all session var references were recognized (@@session.var).
j) Fixed some errors with aggregate functions (like not supporting ALL and DISTINCT).
k) Added support for 'show full tables'.
l) Corrected some inconsistencias with 'character set' clause among grammar statements.
m) Corrected bad support for casting expressions
n) Added support for missing expressions 'default' and 'values'.
o) Added optional support for condition in 'case' expression.
p) Made definition for column definition in DDLs more compliant with server.
q) Added missing support for bool/boolean data types.
r) Corrected some inconsistencies in collate for expressions.
s) Added support for ws_nsweights & opt_ws_levels in weigth function.
t) Corrected many arguments for functions with special syntax (like now being able to accept expressions instead of only literals).
u) Removed some false keywords (engine names like myisam) from lexer spec.
v) Added 200+ extra unit tests.
- Fix for bad query when using LINQ to Entities with a query using Take, OrderBy & Contains in Code First (MySql bug #69751, Oracle bug #17194945).
- Fix for Visual Studio parser for MySql does not recognize properly all valid identifiers (Oracle Bug #16881354).
- Fix for LINQ to Entities error for bad aliasing in column for expression (MySql bug #69922, Oracle bug #17285548).
- Fix for In stored routine debugger, after a case else a begin-end is badly instrumented (Oracle bug #17284598).
- Fix for .Net connector does not add auto_increment to bigint columns (MySql Bug #70602).


6.6.5
- Fix for bug Keyword not supported. Parameter name: AttachDbFilename (Mysql bug #66880, Oracle bug #14733472).
- Added support to MySql script file to retrieve data when using "SHOW" statements.
- Fix for Package Load Failure in Visual Studio 2005 (MySql bug #63073, Oracle bug #13491674).
- Fix for bug "Unable to connect using IPv6 connections" (MySQL bug #67253, Oracle bug #14835718).
- Added auto-generated values for Guid identity columns (MySql bug #67450, Oracle bug #15834176).
- Fix for method FirstOrDefault not supported in some LINQ to Entities queries (MySql bug #67377, Oracle bug #15856964). 
- Fix internal bug "Parser cannot recognize row_count in grammar version 5.6" (id task 326).
- Fixed missing keywords not working as ids (wihout quoting) in parser: value, status, unknown & some unit tests from Arnaud feedback.
- Fix for Datetime precision doesn't work with code first or model first. (Oracle bug #15972773).
- Fix for Support for current_timestamp as default for datetime with ef for server 5.6 (Oracle bug #15935094).
- Adding support for Geometry type. Unit Tests included. Supporting server 5.1 and further.
- Added support for new connect attributes feature in server 5.6 (Oracle bug #15935112).
- Added protocol support for password expiration (Oracle bug #15935104).
- Added to parser missing "alter user ... password expire".
- Fix for "Debugger error on stored procedure", which is actually a parser bug (parser was expecting decimal both precision & scale), (bug MySql #67975, Oracle bug #16079735).
- Added support for password hashing with appropriate strength for server 5.6 (Oracle bug #15935128).
- Added a more friendly message for error when trying to authenticate with old password.


6.6.4
- Fixed Entity Framework + mysql connector/net in partial trust throws exceptions (MySql bug #65036, Oracle bug #14668820).
- Added support in Parser for Datetime and Time types with precision when using Server 5.6 (No bug Number).
- Small improvement on MySqlPoolManager CleanIdleConnections for better mysqlpoolmanager idlecleanuptimer at startup (MySql bug #66472 and Oracle bug #14652624).
- Fix for bug TIMESTAMP values are mistakenly represented as DateTime with Kind = Local (Mysql bug #66964, Oracle bug #14740705).


6.6.3
- Added feature to define initial values for InOut stored procedure arguments.
- Debugger: Fixed Visual Studio locked connection after debugging a routine.
- Fix for bug Cannot Create an Entity with a Key of Type String (MySQL bug #65289, Oracle bug #14540202). This fix checks if the type has a FixedLength facet set in order to create a char otherwise should create varchar, mediumtext or longtext types when using a String CLR type in Code First or Model First also tested in Database First. Unit tests added for Code First and ProviderManifest.
- Fix for bug "CacheServerProperties can cause 'Packet too large' error". The issue was due to a missing reading of Max_allowed_packet server property when CacheServerProperties is in true, since the value was read only in the first connection but the following pooled connections had a wrong value causing a Packet too large error. Including also a unit test for this scenario. All unit test passed. MySQL Bug #66578 Orabug #14593547.
- Fix for handling unnamed parameter in MySQLCommand. This fix allows the mysqlcommand to handle parameters without requiring naming (e.g. INSERT INTO Test (id,name) VALUES (?, ?) ) (MySQL Bug #66060, Oracle bug #14499549).
- Fixed end of line issue when debugging a routine.
- Added validation to avoid overwriting a routine backup file when it hasn't changed.
- Fixed inheritance on Entity Framework Code First scenarios. Discriminator column is created using its correct type as varchar(128) (MySql bug #63920 and Oracle bug #13582335).
- Fixed "Trying to customize column precision in Code First does not work" (MySql bug #65001, Oracle bug #14469048).
- Fixed bug ASP.NET Membership database fails on MySql database UTF32 (MySQL bug #65144, Oracle bug #14495292).
- Fix for MySqlCommand.LastInsertedId holding only 32 bit values (MySql bug #65452, Oracle bug #14171960) by changing
  several internal declaration of lastinsertid from int to long.
- Fixed "Decimal type should have digits at right of decimal point", now default is 2, but user's changes in 
  EDM designer are recognized (MySql bug #65127, Oracle bug #14474342).
- Fix for NullReferenceException when saving an uninitialized row in Entity Framework (MySql bug #66066, Oracle bug #14479715).
- Fix for error when calling RoleProvider.RemoveUserFromRole(): causes an exception due to a wrong table being used (MySql bug #65805, Oracle bug #14405338).
- Fix for "Memory Leak on MySql.Data.MySqlClient.MySqlCommand", too many MemoryStream's instances created (MySql bug #65696, Oracle bug #14468204).
- Added ANTLR attribution notice (Oracle bug #14379162).
- Fix for debugger failing when having a routine with an if-elseif-else.


6.6.2
- Parser: Fix for Problems when declaring variables in certain places (wasn't accepting declare var after declare handler in a begin/end block).
- Parser: Fix for Problems with CHARSET (previously only CHARACTER SET was recognized).
- Parser: Fix for Parser was not returning table_ref for "replace" parsed statements.
- Debugger: Fix for "Data is Null" error when debugging a Procedure that reference a trigger that is in a different db than current one
- Debugger: Added better support for datetime columns, including zeroed columns, Appended "Allow Zero DateTime=true" to the debugger connection string dynamically/
- Debugger: Fix error when debugging a routine which name was a MySql keyword.
- Debugger: Fix colorizing the whole line when stepping into a line with several statements defined (only the current statement is colorized now, not the whole line).
- Debugger: Enabled colorizing (Intellisense) into debugger editor.
- Debugger: Enabled changing values of locals in a function scope (previously caused deadlock since functions are executed in a transaction in MySql).
- Debugger: Fix a small issue such that when in a multiple stack frame debug session, clicking in a stack frame other than the current one, was not colorizing correctly.
- Debugger: Added support for conditional breakpoints
- Debugger: Added support for pass count breakpoints
- Debugger: Fixed a bug such that in a multiple callstack scenario, cliking in a stack frame other than the last one, was not updating locals grid.
- Debugger: Fixed a bug such that when modifying a local variable in a nested scope debug session, the value appear temporarily as "Not implemented interface".
- Added support for Visual Studio 2012
- Added Authentication Plugin.


6.6.1
- Debugger: Added Support for row_count() (together with found_rows() & last_insert_id() ).
- Debugger: Old & new objects are now available to debugger in trigger scope.
- Debugger: Fixed In case of debugger error (like an already existing table when executing a create table) there was no error reported.
- Debugger: Implemented Having a better way to generate session variable names for OUT & INOUT args to reduce changes of name collision
  (Now they are named @dbg_var1, @dbg_var12, etc.).
- Debugger: Fixed Replace & load dont have triggers instrumented (replace's triggers are now instrumented, load data is not supported in stored routines by server anyway).
- Debugger: Fixed Routines without main begin/end block in their definition won't be instrumented correctly.
- Debugger: Added support for Stepping into triggers & functions.
- Debugger: Added a more friendly message when debugger is already attached.
- Debugger: Added code to properly finish the debugger in case of syntax not supported by parser.
- Debugger: Added fully qualified columns of debug table queries (to avoid conflicts like user routine declaring an arg named 'id').
- Debugger: Fixed to start debug routine when the database password is not saved.
- Debugger: Added Type column to routine arguments dialog.
- Debugger: Fixed "Cannot take lock1" error when an invalid routine argument is sent.
- Debugger: Fixed "No source available" error when debugging a routine with a handler defined in a single line.
- Debugger: Fixed "The given key is not present in the dictionary error." an unlikely race condition solved by moving code to check flags to inside the debugger critical section and making volatile both flags.
- Debugger: Fixed Sometimes debugger hanged when Shift+F5 was used to stop a debug session.
- Debugger: Fixed cannot evaluate or change session variables in the debugger.
- Debugger: Added support for othe steppings, Step Over (F10) & Step Out (Shift + F11) now work correctly. 
- Debugger & Intellisense: Parser is now fully compliant with MySql syntax 5.0, 5.1, 5.5 & 5.6.
- Intellisense: Fixed an issue with Intellisense, such that in server explorer was only working for new routines, not for existing ones. 
- Fixed deleting a user profile using Profile provider (MySQL bug #64470, Oracle bug #13790123)


6.6.0
- Fix for ArgumentNull exception when using Take().Count() in a LINQ to Entities query (bug MySql #64749, Oracle bug #13913047).
- Fix for type varchar changed to bit when saving in Table Designer (Oracle bug #13916560).
- Fix for error when trying to change the name of an Index on the Indexes/Keys editor; along with this fix now users can change the Index type of a new Index which could not be done
  in previous versions, and when changing the Index name the change is reflected on the list view at the left side of the Index/Keys editor (Oracle bug #13613801).
- Fix for stored procedure call using only its name with EF code first (MySql bug #64999, Oracle bug #14008699). 
- Fix for List.Contains generates a bunch of ORs instead of more efficient IN clause in 
  LINQ to Entities (Oracle bug #14016344, MySql bug #64934).
- Fix for performance issue in generated EF query: .NET StartsWith/Contains/EndsWith produces MySql's locate instead of Like (MySql bug #64935, Oracle bug #14009363).
- Fix for script generated for code first contains wrong alter table and wrong declaration for byte[] (MySql bug #64216, Oracle bug #13900091).
- Fix for bug MySqlDateTime when using milliseconds precision minor than 6 in the column definition. (MySql #64867 Oracle bug #13881444 ).
- Fix and code contribution for bug Timed out sessions are removed without notification which allow to enable the Expired CallBack when Session Provider times out any session (bug MySql #62266 Oracle bug # 13354935)
- Entity Framework Code First Enable-Migrations new feature in version 4.3.1. First commit that includes:
	- New Class MySqlMigrationSqlGenerator that generates mysql statements for Migration Operations. Still has some improvements to be done. (Check TODO Notes included).
	- New Class MySqlConnectionFactory.cs used in configuration for Enable Migrations
	- Changes in ProviderManifest.cs: Added validation in public override TypeUsage GetEdmType(TypeUsage storeType) to use a different constructor for CreateTypeUsage when Primitive type    is String.
	- Changes in ProviderServices.cs: Changed visibility in method GetColumnType(TypeUsage type) from private to internal.
	- Added reference in MySql.Data.Entity.csproj to include new namespace for Migrations.
- Initial version of Debugger of MySql stored routines & its Visual Studio integration (worklogs #6270 and #6245).
- Fix for Exception thrown when using cascade delete in an EDM Model-First in Entity Framework (Oracle bug #14008752, MySql bug #64779).
- Fix for Session locking issue with MySqlSessionStateStore (MySql bug #63997, Oracble bug #13733054).
- Fixed deleting a user profile using Profile provider (MySQL bug #64470, Oracle bug #13790123)
