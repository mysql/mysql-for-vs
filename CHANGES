- Made MySqlDateTime serializable (MySQL bug #40555, Oracle bug #11750161).
- Return datetime values for timestamp fields as DateTimeKind.Local (MySQL bug #63812, Oracle bug #13591554)
- Fix for "Connector/Net Generates Incorrect SELECT Clause after UPDATE" (MySql bug #62134, Oracle bug #13491689). 
- Fix for Error on intellisense when typing "-" (Orable Bug #13522344). 
- Fixed creation Trigger dialog bug (Oracle bug #13511801)
- Fix for VS IS SHOWING AN ERROR WHEN TRYING TO CREATE A FOREIGN KEY (Oracle bug #13511776).
- Fix for Error when changing data length in table designer in varchar columns. (Oracle bug #13611677).
- Fix for Bug in Visual Studio Table Designer on editing column name the changes were not visually detected until focus is switched (Oracle bug #13613755).
- Fix for VS let you close the FK dialog even when the created FK do not have any data (Oracle bug #13613839).
- Fix for error when creating index through VS table designer. (Oracle bug # 13613765 - INDEX/KEYS ERROR MODIFYING COLUMNS FIELD).
- Fix on Bug #62801 (mysql.dev) #13491698 Orabug DB Strange behaviour with Include in LINQ-to-Entities. Changes on SelectStatement class on method GetDefaultColumnsForFragment to assign the table name when adding a new column. 
  The table name added for the new column had the wrong context of the fragment which was the cause of the problem. This fix assign the context right after the creation of the new ColumnFragment object. 
  Added Unit Tests VS2010 and VS2008.
- Fix for EF4.1, Code First, CreateDatabaseScript() generates an invalid MySQL script (MySQL bug #62150, Oracle bug #13582837).
- Fix for Connections not closed properly when using pooling (MySql bug #63942, Oracle bug #13629471).
- Changed behavior when MySqlCommand.CommandText is null, now it throws an InvalidOperationException instead of 
  NullReferenceException on ExecuteReader (MySql bug #64092, Oracle bug #13624659)
- Fixed Foreign Key Relationship list refresh when deleting a relationship (Oracle bug #13610283)
- Fixed unable to delete rows on Foreign Key Relationship screen (Oracle bug #13610235)
- Hides selected columns on Foreign Key Relationship screen (Oracle bug #13615258)
- Fix for unexpected closing of Add Function Import window when pressing Get Column Information (Oracle bug #13511736).
- Fix for bug where an attempt to save table data after the first save has occurred would fail (Oracle bug #13613714).
- Fix for ENTITY FRAMEWORK MODEL FAILS WHEN IS CREATED FROM DATABASE (Oracle bug #13610452).
- Fix for Bug on Installer failing to add registry entry causing that when creating a Project targeting .net framework different than 4.0v library was not listed. (Mysql bug #60462 Oracle bug #13491678).
- Fixed MySqlTime parsing to handle milliseconds (Oracle bug #13708884)
- Fix for SEXP-1ST FK RENAMED WHEN ADDING A NEW ONE (Oracle bug #13613824).
- Fix for Duplicate table name don't allow you to change table name (Oracle bug #13785918).
- Fix for CommandText property set method performance improvement (MySql bug #64012, Oracle bug #13739383).
- Fix for Foreign Keys not imported in Entity Model Wizard (Oracle bug #13800109).

Version 6.3.8
- Modified ProviderManifest.xml to map TIMESTAMP db fields to the DateTime .NET type (MySQL bug #55351, Oracle bug #12652602).
- Modified MySqlConnection.BeginTransaction to throw a NotSupportedException when Snapshot isolation level 
  is requested (MySQL bug #61589, Oracle bug #12698020).
- Modified SqlFragment.QuoteIdentifier to add MySQL quotes around identifiers (MySQL bug #61635, Oracle bug #12707285).
- Modified the SchemaDefinition-5.5.ssdl to treat char(36) columns as GUID (MySQL bug #61657, Oracle bug #12708208).
- Configured DataGridView to use VirtualMode and added some required events, so it can save back 
  to the data source the grid changes (MySQL bug #61617, Oracle bug #12711786).
- Modified ASP.NET membership provider to create and query all related tables using lowercase names (MySQL bug #61108, Oracle bug #12702009).
- Modified MySqlDataReader.Close to use Default behavior when clearing remaining resultsets (MySQL bug #61690, Oracle bug #12723423).
- Modified MySqlScript to enable correct processing of the DELIMITER command when not followed by 
  a new line (MySQL bug #61680, Oracle bug #12732279).
- On Model First changed column types generated in sql script to produce more suitable MySql types (MySql bug #59244, Oracle bug #12707104).
- Modified MySqlProviderServices.GetDbProviderManifestToken to use InvariantCulture when parsing the
  server version (MySQL bug #61901, Oracle bug #12831581)
- Added changes to correctly generate database on code first and test case, project MySql.Data.Entity.ModelFirst.Tests. While testing the fix corrected 
  another issue of mysql generation sql scripts using "Name" instead of "Table" property to
  get the name of MySQL table to issue (MySQL bug #61230, Oracle bug #12728085).
- Modified MySqlStream and MySqlPacket to always use UTF8 to read packages when MySQL Server is version 5.5+ (MySQL Bug #61687, Oracle Bug #12889085).
- Included type String (for MySQL char) on Field.IsTextField so it can apply logic to correct 
  DataColumn.MaxLength (MySQL bug #62094, Oracle bug #12860224).
- Modified MySQLParameter constructor to correctly assign IsNullable, Precision and Scale properties
  (MySQL bug #62194, Oracle bug #12999162).
- Moved Visual Studio 2010 integration registry entries from WiX installer to a pkgdef file.
- Added upgrade ability to installer
- Modified MySqlProviderServices.GetDbProviderManifestToken to use InvariantCulture when parsing the
  server version (MySQL bug #61901, Oracle bug #12831581).
- Added changes to support some corner cases with nested TableFragments with limit clause (Take Linq operator) (MySQL bug #61729, Oracle bug #12776598).
- Modified ProviderServices classes to generate text types when using variable length string types (MySQL bug #54915, Oracle bug #12848277).
- Fix for customer issue: bad management of alias in SelectStatement (bug #12807366).
- Modified StreamCreator.GetStreamFromHost to bypass IPV6 addresses when connecting to any MySQL Server below 5.5.3.
- Modified MySQLParameter setter to correctly map MySqlDbType.NewDecimal to DbType.Decimal type. (MySQL bug #62246 Oracle Bug #13050570).
- Fix to correctly Map Entity Primitive Type Byte to utinyint when using Code First. (MySQL bug  #62135 , Oracle bug #13061713).
- Added Map Entity Primitive Type SByte missed on ProviderManifest.
- Added quotation mark to Escape Character on MySQLHelper class (MySQLbug #62585, Oracle bug #13092886).
- Removed check for hashed passwords when run on Mono.  It supports it now (MySQL bug #62203, Oracle bug #13041618)
- Modified MySqlParameterCollection to autoassing parameter names if you try to add a parameter with a null
  or empty name (MySQL bug #62416, Oracle bug #13006969).
- Sped up MySqlParameterCollection.AddWithValue for cases where large number of parameters are involved (MySQL bug #62563, Oracle bug #13331475)
- Fix on Bug Default Value CURRENT_TIMESTAMP throws err msg but still is saved (Oracle bug #13429150).
- Fix on Bug Varchar and char type fields have quotation marks in default value when editing definition in VS designer (Oracle bug #13442506).
- Fix for bug on Create Table via Server Explorer. The columns properties are now added in the correct order.(Oracle db Bug # 13475830).
- Fix for error when creating a table in table designer (Oracle bug #13477805).
- Fix for Cannot create a foreign key that references the same table (Oracle bug #13481340).
- Fixed installer to install for all users (per machine installation) (Oracle bug #13447941) 
- Fix for cannot delete a foreign key (Oracle bug #13481362).
- Fix for Non default options for On update & on cascade for foreign keys, don't work (Oracle bug #13481348).
- Fix for bug on Create Index via Server Explorer. The columns added in descending sort order were not included in the index. This atribute
  is parse by the server but ommited until the moment of the implementation. (Reference http://dev.mysql.com/doc/refman/5.0/en/create-index.html)
  An index_col_name specification can end with ASC or DESC. These keywords are permitted for future extensions for specifying ascending or descending 
  index value storage. Currently, they are parsed but ignored; index values are always stored in ascending order.  (Oracle db Bug # 13481709).
- Fix for bug on Create Index via Server Explorer. Comment property and Index type were not added in the definition of the Index. (Oracle db bug # 13481314).
- Fix bug on Delete Index via VS Table Designer. Removed method was not affecting the Indexes List of the Table object. (Oracle db bug # 13481313 ).
  This fix updates the Delete method on TableIndexDialog Class to correctly update the list of Indexes on the table object.
- Fix for no default type for new columns in table designer (Oracle bug #13481298).


Version 6.3.7
- IPv6 connections are now supported 
- fixed exection of command ";" to throw a query was empty exception instead of IndexOutOfRangeException 
  (MySQL bug #59537, Oracle bug #11766433)
- fixed bug that prevented setting the membershipprovider's ApplicationName property at runtime
  (MySQL bug #59438, Oracle bug #11770465)
- fixed MySqlConnectionStringBuilder.ContainsKey to return true for any alternative versions
  of a keyword (MySQL bug #59835, Oracle bug #11766671)
- fixed calculation of precision and scale for decimal columns
  (MySQL bug #59989, Oracle bug #11776346)
- fixed NullReferenceException when a timeout occurred inside a TransactionScope
  (MySQL bug #59346, Oracle bug #11766272)
- small but important improvements in EF sql generation
- added batching support for updates and deletes (bug #59616)
- Introduced workaround to unexpected query aborts (server 5.1+) when executing a datareader after a command.Cancel() (MySQL bug#60541).
- Fixed SetSite issues with Visual Studio 2010 integration (MySQL bug#60723, Oracle bug #12394470)
- modified schema1.sql in MySql.Web to remove ENGINE declaration on table creation (Oracle bug #12311974).
- fixed performance issue with executing stored procedures with output parameters
  (MySQL bug #60366, Oracle bug#12425959)
- Introduced more detailed exceptions for invalid connection strings errors (MySQL bug#44654, MySQL bug#53076).
- Introduced the real NUnit framework to the CF test suite and fixed issues on BaseTest to properly run with CF libraries. 
- Modified MySql.Data.Entity.ProviderServices to use the correct schema definition file when server is 5.5 or greater (Oracle bug #12407444).
- Introduced a new unit test to ensure a commit will not timeout after a heavly load of inserts (MySQL bug #58004).
- fixed ISSchemaProvider to use the information schema to retrieve parameter metadata when running 
  against server 5.5.3 or greater (MySQL bug #48007, Oracle bug #12539685).
- Fixed MySqlProviderManifest.GetStoreSchemaDescription() to return the correct schema definition depending
  on the server version.
- Fixed Driver creation to not crash when it can't instantiate MySqlTrace type because of missing permissions (MySQL bug #59202, Oracle bug #12548114).
- Added entity framework support for MySQL Server Round(X, D) function (MySQL bug #58552, Oracle bug #11765569).
- Introduced a connection string check and exception to notify that it is not possible to use SSL related 
  keywords when running on the Compact Framework. Also all SSL related keywords in ConnectionStringBuilder
  are now hidden when running on the Compact Framework (MySQL bug #60600).
- Fixed MembershipProvider to only return exact matches when calling GetUser(string username) and 
  GetUserNameByEmail (MySQL bug #61027, Oracle bug #12562287).
- added the ability to raise a join on the right side of a join to a derived table in EF code generation (bug #48791)
- Reintroduced implementations for DbCreateDatabase, DbDatabaseExists, DbDeleteDatabase and DbCreateDatabaseScript 
  in MySqlProviderServices. In this update none of those methods require access to the mysql database (MySQL bug #59168, Oracle bug #11766128).
- Modified EFMySqlDataReader to read byte[] values as booleans when the server incorrectly reports bits as binaries 
  when they are members of internal EF UNIONS (MySQL bug #60652, Oracle bug #12593193).
- Modified Connection.Open() to not reuse existing driver instance when that instance is closed. Also made Connection.Abort() 
  always close the current driver, even if the connection is pooled. (MySQL bug #58316, Oracle bug #12613102).
- Added Visual Studio DDEX support for Compact Framework projects (MySQL bug #54607, Oracle bug #12605152).  
- Fixed Entity Framework provider GROUP BY clause generation by adding all group by keys to the SELECT statement (MySQL bug #46742, Oracle bug #12622129).
- Removed support for file based certificates when connecting to MySQL Server 5.0 or below.

Version 6.3.6
- Fixed TracingDriver so that it normalizes long queries before truncation so we don't get exceptions     
  when quoted tokens land on the 300th character (bug #57641)
- added code that will attempt to enumerate procs via mysql.proc the first time. If we get an 1142     
  error then we mark that we don't have access to that table and use IS from then on. (bug #36694)
- fixed loading of mono.posix assembly to use the right assembly (bug #56410)
- fixed the installer to require .net 2.0 or .net 4.0 "full" profile since system.web is only supplied with
  the full profile (bug #57654)
- starting delivering 4.0 variants of MySql.Data and MySql.Web.  This apparently helps Mono 2.8 (bug #56509)
- adding mapping for UTF8MB4 charset introduced with 5.5.3 (bug #58244)
- return default values for text columns as quoted (bug #58167)
- fixed our DDEX code so that dragging tables from server explorer onto a typed data set
  preserves the table name (bug #57894)
- fixed ReadFieldLength to return a long so bigint autoincrement columns can work (bug #58373)
- fixed MySqlHelper.ExecuteReader bug where it was opening the connection inside a using block
  which was closing the connection before we were really done with it (bug #57501)
- fixed bug where older versions of MySQL would present cast(0 as decimal(0,0)) as string 
  that caused our EF code to throw an exception as it tried to convert that to bool
  (bug #55349)
- change reader to close the connection if CommandBehavior.CloseConnection is given and an
  exception is generated (bug #58652)
- removed extra call to Update in MySqlDataAdapter introduced with bug fix to bug #54863.
  It seems to not be necessary (bug #58853)
- fixed unnecessary string code in MySqlTokenizer (bug #58757)
- fixed MembershipProvider to properly set a hash key when using a keyed hash alogrithm (bug #58906)
- HelpLibManager is now launched during setup to integrate the docs into VS2010

Version 6.3.5
- Fix installer bug related to .NET FW 4.0 (bug #56580)
- Added MySqlHelper.ExecuteReader that takes an external connection and array of paramters (bug #56755)
- fixed database methods in EF4 provider services to use the database name from the connection string (bug #56589)
- fixed problem with using bit parameters as output (bug #56756)
- Handle MySqlCommand.CommandTimeout = 0 properly (Bug #57265)
- Do not call AcceptChanged on tables in MySqlDataAdapter.Update(),
  but on individual rows (Bug #57092)
- fixed MySqlCommand.Clone so that the default command timeoout functionality is not disabled when
  you clone a command (bug #56806)

Version 6.3.4
- Fix authorization popup after modifying stored procedure in VS (Bug #44715)
- Dispose EventLog after use in MySql.Web.dll provider classes, to avoid wasting resources
  (Bug #55793)
- Fix calculation of lockAge in SessionProvider (Bug #55701)
- Handle cases where server returns unparsable (out-of-range) double values
  (Bug#55644)
- Fix DataAdapter.Update() slowdown due to many superfluous DataTable.AcceptChanges() calls (Bug #55609)
- fixed visual studio plugin so that stored procedure editing works on older versions of MySQL (bug #55170)
- Improve performance of write operaitons (e.g insert) if compression is enabled (Bug #48243)
- Changed timestamp columns in entity framework models to be DateTime objects instead of DateTimeOffset (bug #52550)

Version 6.3.3 (beta 2)
- fix "There is already an open DataReader..." after exceptions in DataReader.Close()
 (bug#55558)
- Improve performance of MySqlHelper.EscapeString()
- Improve performance of write operations (e.g insert) if compression is enabled
  (Bug #48243)
- Improve performance of MySqlHelper.EscapeString()
- Fix membership provider creation failure, when default database character set is different from latin1 (Bug #53174)
- Fix "Connection must be valid and open" exception When UpdateBatchSize > 1 
  and MySqlDataAdapter is not using an open connection (Bug #38411)
- Make sure MySqlDataAdapter.Update() works for custom stored procedure driven update commands 
  that make use of UpdateRowSource.FirstReturnedRecord (Bug#54895)
- Fix null reference exception when TransactionScope is used by multiple threads
 (bug#54681, fix contributed by Erskine Thompson)
- Ensure exceptions are not silently eaten inside MySqlDataReader.Read()  (Bug#53439)
- Cancel query in ThreadAbortException handler (Bug#54012)
- Call DataTable.AcceptChanges() for affected tables at the end of MySqlAdapter.Update, 
  to match the documented IDataAdater behavior (bug#54863)
- Fix race condition (concurrent reading/modification of the same DataSet) in StoredProcedure.GetParameters()
  (bug#49118)
- Fix problems with MySqlDataAdapter insert command, when batch size is > 1, and 
  INSERT statement has expression with parentheses (e.g arithmetical expressions) (bug #54386)
- fix crashes on long queries, when logging is turned on (bug #53865, bug #54152)
- try to avoid exception if Connection is garbage-collected (bug #53457)
- when command is killed, e.g as result of timeout, error code returned from server 
  is not necessarily 1317 (QueryInterrupted). It might as well be 1028 (FileSortAborted).
  Fix timeout handling to handle both error codes in the same fashion (bug #53357)
- changed installer code to skip over config folders that do not contain a machine.config (bug #52352)
- added public MySqlHelper.ExecuteDataReader method that takes an external connection (bug #54570)
- applied patch from 5.x series that reset the connection to the base encoding when doing a 
  connection reset (bug #47153)
- fixed bug that caused the web site config wizard to not appear when working with web applications
  as opposed to websites (bug #54571)
- changed DbCommandBuilder and added a MySqlDataObjectIdentifierConverter so we don't output
  the databasename in our typed datasets.  This allows users to move the dataset to a new
  database/server with no trouble (bug #33870)
- fixed recognition of char(36) columns to be guids when used in views with entity models (bug #52085)
- fixed a couple of installer problems (bug #53975)
- fixed installer so that it will work if .NET 4.0 is installed by itself

Version 6.3.2 (beta 1)
- added feature where sql queries that are longer than 300 chars are normalized and a new
  query normalized log line is issues right after query opened to give the query normalized text
- fixed bug in sql generation when using a negated binary fragment in EF (bug #49850)
- fixed bug in tokenization where a nonterminated string in sql will cause a CLR exception
  rather than throwing a syntax exception (bug #51788)
- added two requested features -- MySqlDataReader.GetFieldType(string columnname) &
  MySqlDataReader.GetOrdinal() includes the name of the column in the exception when not found
  (bug #47467)
- Replaced check for Settings.Logging when logging information in the 
  procedure cache.  This is already in 6.1 and 6.0 but got "misplaced" in 6.2
  (bug #52475)
- Added trace message in exception blog in MySqlConnection.Abort() method (bug #52769)
- changed how we respond when the user selects 'functions return string=true'.  Now we no longer force the type to var string but just let the underlying type come through but we strip the binary flag (bug #52187)
- changed mapping of latin1 from latin1 to windows-1252 (bug #51927)
- flushed out many more entires in error code enum (bug #51988)
- SessionProvider : Avoid SQLNullValueException if lockId returned by select is 
  NULL (bug#52175)
- changed how we respond when the user selects 'functions return string=true'.  Now we no longer force the type to var string but just let the underlying type come through but we strip the binary flag (bug #52187)
- improved our procedure caching so that if you drop and recreate a proc with a different number of parameters
  it will find the new proc as long as your are actually using the right number of parameters (bug #52562)

Version 6.3.1 (alpha 2)
- fixed bug where giving a connection string option like (option=) and then trying to read
  the option back via the property would fail (bug #51209)
- fixed bug where a connection could not be reused in the IDE in some circumstances (bug #41629)
- small performance fix (bug #51149)
- fixed issue with script execution & multi-char delimiters (bug #46429)
- fixed bug in table editor where clicking back on the last row added can sometimes
  cause a ArgumentOutOfRange exception
- fixed bug where a commands batchable command text was not getting reset when the 
  command text was reset (bug #50444)
- fixed bug where using a currently non-batchable command in a batch would throw an exception
  (bug #50123)
- fixed retrieve data command in server explorer so that it works in VS2010
- added sql server mode to allow for [] style symbols in VS wizards
- fixed bug where binary or blob columns would prevent columns after that from appearing in the
  query builder (bug #50171)
- ScriptCompleted event handler now uses EventArgs.Empty instead of null
- fixed parsing bug that was caused by special characters being jammed up beside a quoted identifier (bug #51610)

version 6.3.0 (alpha 1)
- Added the ability to enable query analysis at runtime
- added VS2010 compatibility
