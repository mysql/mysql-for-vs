Version 6.1.6
- Added MySqlHelper.ExecuteReader that takes an external connection and array of paramters (bug #56755)
- Handle MySqlCommand.CommandTimeout = 0 properly (Bug #57265)
- Do not call AcceptChanged on tables in MySqlDataAdapter.Update(),
  but on individual rows (Bug #57092)
- fixed problem with using bit parameters as output (bug #56756)
- fixed MySqlCommand.Clone so that the default command timeoout functionality is not disabled when
  you clone a command (bug #56806)
- fixed loading of mono.posix assembly to use the right assembly (bug #56410)
- adding mapping for UTF8MB4 charset introduced with 5.5.3 (bug #58244)
- return default values for text columns as quoted (bug #58167)
- fixed our DDEX code so that dragging tables from server explorer onto a typed data set
  preserves the table name (bug #57894)
- fixed ReadFieldLength to return a long so bigint autoincrement columns can work (bug #58373)
- fixed bug where older versions of MySQL would present cast(0 as decimal(0,0)) as string 
  that caused our EF code to throw an exception as it tried to convert that to bool
  (bug #55349)
- change reader to close the connection if CommandBehavior.CloseConnection is given and an
  exception is generated (bug #58652)
- removed extra call to Update in MySqlDataAdapter introduced with bug fix to bug #54863.
  It seems to not be necessary (bug #58853)
- fixed unnecessary string code in MySqlTokenizer (bug #58757)
- fixed MembershipProvider to properly set a hash key when using a keyed hash alogrithm (bug #58906)
- small code adjustment to make sure our object enumeration works with MySQL 5.5
- fixed exection of command ";" to throw a query was empty exception instead of IndexOutOfRangeException 
  (MySQL bug #59537, Oracle bug #11766433)
- fixed bug that prevented setting the membershipprovider's ApplicationName property at runtime
  (MySQL bug #59438, Oracle bug #11770465)
- fixed MySqlConnectionStringBuilder.ContainsKey to return true for any alternative versions
  of a keyword (MySQL bug #59835, Oracle bug #11766671)
- fixed calculation of precision and scale for decimal columns
  (MySQL bug #59989, Oracle bug #11776346)
- small but important improvements in EF sql generation
- added batching support for updates and deletes (bug #59616)
- Introduced workaround to unexpected query aborts (server 5.1+) when executing a datareader after a command.Cancel() (MySQL bug#60541).
- modified schema1.sql in MySql.Web to remove ENGINE declaration on table creation (Oracle bug #12311974).
- Introduced more detailed exceptions for invalid connection strings errors (MySQL bug#44654, MySQL bug#53076).
- Introduced the real NUnit framework to the CF test suite and fixed issues on BaseTest to properly run with CF libraries. 
- Modified MySql.Data.Entity.ProviderServices to use the correct schema definition file when server is 5.5 or greater (Oracle bug #12407444).
- Introduced a new unit test to ensure a commit will not timeout after a heavly load of inserts (MySQL bug #58004).
- fixed ISSchemaProvider to use the information schema to retrieve parameter metadata when running 
  against server 5.5.3 or greater (MySQL bug #48007, Oracle bug #12539685).
- Fixed MySqlProviderManifest.GetStoreSchemaDescription() to return the correct schema definition depending
  on the server version.
- Fixed MembershipProvider to only return exact matches when calling GetUser(string username) and 
  GetUserNameByEmail (MySQL bug #61027, Oracle bug #12562287).
- added the ability to raise a join on the right side of a join to a derived table in EF code generation (bug #48791)  
- Modified EFMySqlDataReader to read byte[] values as booleans when the server incorrectly reports bits as binaries 
  when they are members of internal EF UNIONS (MySQL bug #60652, Oracle bug #12593193).
- Modified Connection.Open() to not reuse existing driver instance when that instance is closed. Also made Connection.Abort() 
  always close the current driver, even if the connection is pooled. (MySQL bug #58316, Oracle bug #12613102).
- Added Visual Studio DDEX support for Compact Framework projects (MySQL bug #54607, Oracle bug #12605152).
- Fixed Entity Framework provider GROUP BY clause generation by adding all group by keys to the SELECT statement (MySQL bug #46742, Oracle bug #12622129).
- Modified ProviderManifest.xml to map TIMESTAMP db fields to the DateTime .NET type (MySQL bug #55351, Oracle bug #12652602).
- Modified MySqlConnection.BeginTransaction to throw a NotSupportedException when Snapshot isolation level 
  is requested (MySQL bug #61589, Oracle bug #12698020).

Version 6.1.5
- Fix authorization popup after modifying stored procedure in VS (Bug #44715)
- Dispose EventLog after use in MySql.Web.dll provider classes, to avoid wasting resources
  (Bug #55793)
- Fix calculation of lockAge in SessionProvider (Bug #55701)
- Handle cases where server returns unparsable (out-of-range) double values
  (Bug#55644)
- Improve performance of write operations (e.g insert) if compression is enabled
  (Bug #48243)
- Improve performance of MySqlHelper.EscapeString()
- Fix membership provider creation failure, when default database character set is different from latin1 (Bug #53174)
- Fix "Connection must be valid and open" exception When UpdateBatchSize > 1 
  and MySqlDataAdapter is not using an open connection (Bug #38411)
- Make sure MySqlDataAdapter.Update() works for custom stored procedure driven update commands 
  that make use of UpdateRowSource.FirstReturnedRecord (Bug#54895)
- Ensure exceptions are not silently eaten inside MySqlDataReader.Read()  (Bug#53439)
- Call DataTable.AcceptChanges() for affected tables at the end of MySqlAdapter.Update, 
  to match the documented IDataAdater behavior (bug#54863)
- Fix race condition (concurrent reading/modification of the same DataSet) in StoredProcedure.GetParameters()
  (bug#49118)
- Fix problems with MySqlDataAdapter insert command, when batch size is > 1, and 
  INSERT statement has expression with parentheses (e.g arithmetical expressions) (bug #54386)
- When command is killed, e.g as result of timeout, error code returned from server 
  is not necessarily 1317 (QueryInterrupted). It might as well be 1028 (FileSortAborted).
  Fix timeout handling to handle both error codes in the same fashion (bug #53357)
- added public MySqlHelper.ExecuteDataReader method that takes an external connection (bug #54570)
- applied patch from 5.x series that reset the connection to the base encoding when doing a 
  connection reset (bug #47153)
- fixed bug that caused the web site config wizard to not appear when working with web applications
  as opposed to websites (bug #54571)
- changed DbCommandBuilder and added a MySqlDataObjectIdentifierConverter so we don't output
  the databasename in our typed datasets.  This allows users to move the dataset to a new
  database/server with no trouble (bug #33870)
- fixed recognition of char(36) columns to be guids when used in views with entity models (bug #52085)
- added code to default 'respect binary flags' in the visual studio wizard so that older
  versions of MySQL will work when creating/editing stored procedures (bug #55170)
- fixed stored procedure enumeration code that would barf if a proc was used in a dataset
  that did not actually return any resultsets (bug #50671)

Version 6.1.4
- SessionProvider : Avoid SQLNullValueException if lockId returned by select is 
  NULL (bug#52175)
- When sending file to server (LOAD DATA INFILE) open the file for read only, not for read/write
 (bug #48944)
- Fixed precision calculation on decimal and newdecimal columns (bug #48171)
- Fixed problem caused by us not including a 'REFERENCED_TABLE_CATALOG' column in our
  foreign keys collection (bug #48974)
- fixed entity framework function processing so that it handles stored functions properly
  (bug #45277)
- fixed a bug with prepared statements and unsigned bigint.  Patch also provided a nice speedup to reading
  integer values from the wire (bug #49794)
- fixed problem where not specifying the data type of the return value of a function caused it to 
  mistakenly use Decimal as the return type (bug #49642)
- fixed bug where a scipt that had an empty last line would cause an InvalidOperationException (bug #50344)
- fixed bug where a connection could not be reused in the IDE in some circumstances (bug #41629)
- small performance fix (bug #51149)
- fixed issue with script execution & multi-char delimiters (bug #46429)
- fixed bug in table editor where clicking back on the last row added can sometimes
  cause a ArgumentOutOfRange exception
- fixed bug where a commands batchable command text was not getting reset when the 
  command text was reset (bug #50444)
- fixed bug where using a currently non-batchable command in a batch would throw an exception
  (bug #50123)
- fixed bug where binary or blob columns would prevent columns after that from appearing in the
  query builder (bug #50171)
- ScriptCompleted event handler now uses EventArgs.Empty instead of null
- fixed parsing bug that was caused by special characters being jammed up beside a quoted identifier (bug #51610)
- fixed bug in sql generation when using a negated binary fragment in EF (bug #49850)
- fixed bug in tokenization where a nonterminated string in sql will cause a CLR exception
  rather than throwing a syntax exception (bug #51788)
- added two requested features -- MySqlDataReader.GetFieldType(string columnname) &
  MySqlDataReader.GetOrdinal() includes the name of the column in the exception when not found
  (bug #47467)
- Added trace message in exception blog in MySqlConnection.Abort() method (bug #52769)
- changed mapping of latin1 from latin1 to windows-1252 (bug #51927)
- flushed out many more entires in error code enum (bug #51988)
- changed how we respond when the user selects 'functions return string=true'.  Now we no longer force the type to var string but just let the underlying type come through but we strip the binary flag (bug #52187)
- improved our procedure caching so that if you drop and recreate a proc with a different number of parameters
  it will find the new proc as long as your are actually using the right number of parameters (bug #52562)

Version 6.1.3
- fixed session state provider table definition to allow more than 64K per-session data (bug#47339)
- fixed compilation problem in NativeDriver inside ExecuteDirect  (bug #47354)
- fixed default collation bug with session provider table (bug #47332)
- in sessionState provider, timeout value was read from the wrong (root) web.config (bug#47815)
- fixed crash that can occur when oldGuids are used and binary(16) column  used for GUID 
  contains a null value (thanks Troy!) (bug#47928)
- fixed indexes schema collection so that it still works with bad table names such as b``a`d (bug #48101)
- fixed guid type so that multi-byte character sets will not effect how it works.  A column would be
  considered a guid if it has a *character* length of 36, not a *byte* length of 36 (bug #47985)
- fixed unsigned types in views when used as entities (bug # 47872) 
- now exposing the MySqlDecimal type along with GetMySqlDecimal methods on data reader (bug #48100)    
- applied user-suggested patch to enable type-safe cloning (bug #48460)
- when sending file to server (LOAD DATA INFILE) open the file for read only, not for read/write
 (bug #48944)

Version 6.1.2
- fixed hanging after losing network connectivity to server (bug#43761) 
  Better fix is planned for 6.2
- removed ReturnGeneratedIdentifiers.  We are now treating the command builder exactly
  the same way SqlClient does
- fixed some bugs with session state provider
- fixed typo in asp.net config wizard  
  
Version 6.1.1
- lots of bug fixes merged up from 6.0.5
- fixed website config wizard so that it shows for all web types

Version 6.1.0
- Added new MySQL Website Configuration Wizard
- Now supports native inout and output parameters when in prepared mode and running against a server
  that supports it
- Changed our native guid support to char(32)
- Added a connection string option 'old guids=yes|no' to allow users who have older applications
  to continue using binary(16) guids
